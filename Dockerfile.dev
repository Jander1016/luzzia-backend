# ============================================
# üöÄ Dockerfile Development - Optimizado
# ============================================
FROM node:20-alpine

# Variables de entorno
ENV NODE_ENV=development
ENV PORT=4000
ENV TZ=Europe/Madrid

# Instalar herramientas necesarias
RUN apk update && \
    apk add --no-cache \
        curl \
        dumb-init \
        python3 \
        make \
        g++ \
        tzdata && \
    rm -rf /var/cache/apk/*

# Configurar timezone
RUN cp /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone

# Crear usuario no-root para seguridad
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

# Configurar directorio de trabajo
WORKDIR /app

# Cambiar permisos del directorio
RUN chown -R nestjs:nodejs /app

# Instalar pnpm globalmente
RUN npm install -g pnpm@latest

# Cambiar a usuario no-root
USER nestjs

# Copiar archivos de dependencias
COPY --chown=nestjs:nodejs package.json pnpm-lock.yaml* ./

# Instalar dependencias
RUN pnpm install

# Copiar c√≥digo fuente
COPY --chown=nestjs:nodejs . .

# Exponer puerto
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/api/health || exit 1

# Comando de inicio con dumb-init y modo desarrollo
ENTRYPOINT ["dumb-init", "--"]
CMD ["pnpm", "run", "start:dev"]