# ============================================
# üê≥ PRODUCTION DOCKERFILE - Platform Optimized
# Compatible with Railway, Render, Fly.io, etc.
# ============================================

# ============================================
# üì¶ BUILDER STAGE
# ============================================
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml* ./

# Install pnpm and dependencies
RUN npm install -g pnpm@latest
RUN pnpm install --frozen-lockfile

# Copy source code and build
COPY . .
RUN pnpm run build

# ============================================
# üöÄ PRODUCTION STAGE
# ============================================
FROM node:20-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache dumb-init

# Set environment
ENV NODE_ENV=production
ENV PORT=${PORT:-4000}

# Create app directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml* ./

# Install pnpm and production dependencies
RUN npm install -g pnpm@latest
RUN pnpm install --prod --frozen-lockfile && pnpm store prune

# Copy built application
COPY --from=builder /app/dist ./dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001 && \
    chown -R nestjs:nodejs /app

# Switch to non-root user
USER nestjs

# Expose port
EXPOSE $PORT

# Start application
CMD ["dumb-init", "node", "dist/main.js"]